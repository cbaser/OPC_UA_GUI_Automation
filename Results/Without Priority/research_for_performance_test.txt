


1-) 
higher scheduling priority by setting a low niceness value. This can be done using the nice command, like:
sudo nice -n -20 ./MainClient 

problem : setting high priority to a process that consumes all CPU time can make your system unresponsive so higher priority like -10 safer.

2-) 
Instead of measuring N times and take the average, take the measured shortest time because A process doesn't randomly get faster than it can be, there can only be influences slowing it down.

3-)
Use dedicated CPU core for your process. It's possible to isolate a CPU core from system processes using 2 basic methods:
-Add the parameter isolcpus=[cpu_number] to the Linux kernel command line from the boot loader during boot. This will instruct the Linux scheduler not to run any regular tasks on that CPU unless specifically requested using cpu affinity.

sudo apt-get install util-linux
taskset -p <PID>
taskset -cp 2915 : Current Affinity List
taskset 0x1 ./MainClient : launch MainClient on CPU Core 0

-Use IRQ affinity to set other CPUs to handle all interrupts so that your isolated CPU will not receive any interrupts.
-Use CPU affinity to fix your specific task to the isolated CPU.


https://stackoverflow.com/questions/13583146/whole-one-core-dedicated-to-single-process
http://manpages.ubuntu.com/manpages/bionic/man7/cpuset.7.html

4-) Instead of using exact times of repetition, use time intervals. 
